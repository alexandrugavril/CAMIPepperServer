extends layout

block content
    body
        div(id="myChartDivWeb")
            canvas(id="myChart")

        script(src="http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js").
        script(src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.3/Chart.bundle.min.js").
        script.
            var pData = !{JSON.stringify(plotData)};

            var ctx = document.getElementById("myChart");
            var labs = [];
            var diastolicValues = [];
            var systolicValues = [];
            var backgroundColorD= [];
            var borderColorD= [];
            var backgroundColorS = [];
            var borderColorS = [];
            for (var i = 0; i < pData.length; i++) {
                var t = new Date(pData[i].timestamp);
                labs.push(t.toISOString());
                diastolicValues.push(pData[i].value_info.diastolic);
                backgroundColorD.push('rgba(255, 99, 132, 0.2)');
                backgroundColorS.push('rgba(255, 99, 0, 0.2)');
                borderColorD.push('rgba(255,99,132,1)');
                borderColorS.push('rgba(255,99,0,1)')
                systolicValues.push(pData[i].value_info.systolic);
            }

            function  randomIntFromInterval(min, max) {
                return Math.floor(Math.random() * (max - min + 1) + min);
            }

            var lineChartData = {
                labels: labs,
                datasets: [{
                    label: "Diastolic",
                    backgroundColor: backgroundColorD,
                    borderColor: borderColorD,
                    fill: false,
                    data: diastolicValues,
                    yAxisID: "y-axis-1",
                }, {
                    label: "Systolic",
                    backgroundColor: backgroundColorS,
                    borderColor: borderColorS,
                    fill: false,
                    data: systolicValues,
                }]
            };
            var myChart  = Chart.Bar(ctx, {
                    data: lineChartData,
                    scaleOverride: true,
                    scaleSteps: 5,
                    scaleStepWidth: 5,
                    options: {
                        maintainAspectRatio: false,
                        responsive: true,
                        hoverMode: 'index',
                        stacked: false,
                        scales: {
                            yAxes: [{
                                type: "linear", // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                                display: true,
                                position: "left",
                                beginAtZero: true,
                                steps: 10,
                                stepValue: 5,
                                id: "y-axis-1",
                            }],
                        }
                    }
                });




