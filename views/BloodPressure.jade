extends layout

block content
    body
        div
            canvas(id="myChart" width="400px" height="600px")

        script(src="http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js").
        script(src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.3/Chart.bundle.min.js").
        script.
            var ctx = document.getElementById("myChart");
            var labs = [];
            for(var i = 7 ; i  > 0; i--)
            {
                var date = new Date();
                date.setDate(date.getDate() - i);
                labs.push(date);
            }

            function  randomIntFromInterval(min, max) {
                return Math.floor(Math.random() * (max - min + 1) + min);
            }
            var labs = [];
            for (var i = 7; i > 0; i--) {
                var date = new Date();

                date.setDate(date.getDate() - i + 1);
                labs.push(date.getDate() + "-" + (date.getMonth() + 1)  + "-" + date.getFullYear());
            }
            var lineChartData = {
                labels: labs,
                datasets: [{
                    label: "Diastolic",
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(255, 99, 132, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255,99,132,1)',
                        'rgba(255,99,132,1)',
                        'rgba(255,99,132,1)',
                        'rgba(255,99,132,1)',
                        'rgba(255,99,132,1)',
                        'rgba(255,99,132,1)',
                        'rgba(255,99,132,1)'
                    ],
                    fill: false,
                    data: [
                        randomIntFromInterval(100,139),
                        randomIntFromInterval(100,139),
                        randomIntFromInterval(100,139),
                        randomIntFromInterval(100,139),
                        randomIntFromInterval(100,139),
                        randomIntFromInterval(100,139),
                        randomIntFromInterval(100,139)
                    ],
                    yAxisID: "y-axis-1",
                }, {
                    label: "Systolic",
                    backgroundColor: [
                        'rgba(255, 99, 0, 0.2)',
                        'rgba(255, 99, 0, 0.2)',
                        'rgba(255, 99, 0, 0.2)',
                        'rgba(255, 99, 0, 0.2)',
                        'rgba(255, 99, 0, 0.2)',
                        'rgba(255, 99, 0, 0.2)',
                        'rgba(255, 99, 0, 0.2)',
                    ],
                    borderColor: [
                        'rgba(255,99,0,1)',
                        'rgba(255,99,0,1)',
                        'rgba(255,99,0,1)',
                        'rgba(255,99,0,1)',
                        'rgba(255,99,0,1)',
                        'rgba(255,99,0,1)',
                        'rgba(255,99,0,1)',
                    ],
                    fill: false,
                    data: [
                        randomIntFromInterval(70,85),
                        randomIntFromInterval(70,85),
                        randomIntFromInterval(70,85),
                        randomIntFromInterval(70,85),
                        randomIntFromInterval(70,85),
                        randomIntFromInterval(70,85),
                        randomIntFromInterval(70,85)
                    ],
                }]
            };
            var myChart  = Chart.Bar(ctx, {
                    data: lineChartData,
                    scaleOverride: true,
                    scaleSteps: 5,
                    scaleStepWidth: 5,
                    options: {
                        maintainAspectRatio: false,
                        responsive: true,
                        hoverMode: 'index',
                        stacked: false,
                        title: {
                            display: true,
                            text: 'Blood Pressure'
                        },
                        scales: {
                            yAxes: [{
                                type: "linear", // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                                display: true,
                                position: "left",
                                beginAtZero: true,
                                steps: 10,
                                stepValue: 5,
                                id: "y-axis-1",
                            }],
                        }
                    }
                });




